services:
  directus:
    image: directus/directus:11.1.0
    ports:
      - 8055:8055
    volumes:
      - ./database:/directus/database
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    environment:
      DB_CLIENT: "pg"
      DB_CONNECTION_STRING: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${ADMIN_PW}"
      SECRET: "${SECRET}"
      WEBSOCKETS_ENABLED: "true"
      WEBSOCKETS_GRAPHQL_ENABLED: "false"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - general

  postgres:
    image: postgres:16.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}  
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - general
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 50s
      timeout: 10s
      retries: 5

volumes:
  pgdata:

networks:
  general:
    driver: bridge

  # web:
  #   build:
  #     context: .
  #   ports:
  #     - "8881:8888"
  #   expose:
  #     - "8888"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     - NODE_ENV=production
  #     - VITE_BOT_TOKEN=${VITE_BOT_TOKEN}
  #     - VITE_SITE_URL=${VITE_SITE_URL}
  #     - VITE_SETUP_SECRET=${VITE_SETUP_SECRET}
  #     - VITE_SITE_PORT=${VITE_SITE_PORT}
  #     - VITE_WS_URL=${VITE_WS_URL}
  #     - VITE_GTM_ID=${VITE_GTM_ID}
  #     - VITE_YA_METRIKA=${VITE_YA_METRIKA}
  #     - VITE_BOT_NAME=${VITE_BOT_NAME}
  #     - VITE_BOT_APP_NAME=${VITE_BOT_APP_NAME}
  #     - VITE_BUGSNAG_KEY=${VITE_BUGSNAG_KEY}
  #     - BUGSNAG_KEY_NODE=${BUGSNAG_KEY_NODE}
  #     - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
  #     - REDIS_URL=redis://${REDIS_USER}:${REDIS_PASSWORD}@redis:${REDIS_PORT}
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:8888/health || exit 1"]
  #     interval: 60s
  #     timeout: 10s
  #     retries: 3

  # redis:
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - app-network
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 50s
  #     timeout: 10s
  #     retries: 5