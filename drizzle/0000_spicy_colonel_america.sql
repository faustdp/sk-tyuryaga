-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TYPE "public"."farm_status" AS ENUM('farming', 'farmed', 'claimed');--> statement-breakpoint
CREATE TYPE "public"."task_status" AS ENUM('start', 'check', 'claim', 'done');--> statement-breakpoint
CREATE TABLE "invites" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "invites_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"inviter" bigint,
	"invitee" bigint,
	"depth" smallint DEFAULT 1,
	CONSTRAINT "invites_depth_check" CHECK (depth = ANY (ARRAY[1, 2, 3]))
);
--> statement-breakpoint
ALTER TABLE "invites" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "messages" (
	"id" integer GENERATED BY DEFAULT AS IDENTITY (sequence name "messages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"text" text NOT NULL,
	"photo_url" varchar(1024),
	"buttons" jsonb,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "tasks" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "tasks_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"type" varchar(20) NOT NULL,
	"position" integer NOT NULL,
	"reward" integer NOT NULL,
	"icon" varchar(1024) NOT NULL,
	"link" varchar(1024),
	"active" boolean DEFAULT true NOT NULL,
	"delay" integer,
	"invites" integer,
	"codes" text[],
	CONSTRAINT "tasks_type_check" CHECK ((type)::text = ANY ((ARRAY['invite'::character varying, 'code'::character varying, 'subscribe'::character varying])::text[]))
);
--> statement-breakpoint
CREATE TABLE "users" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"tg_id" bigint NOT NULL,
	"first_name" varchar(100) NOT NULL,
	"username" varchar(32),
	"address" varchar(55),
	"language" varchar(5) NOT NULL,
	"farm" "farm_status" DEFAULT 'claimed' NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"last_visit" timestamp with time zone DEFAULT now() NOT NULL,
	"invited_by" bigint,
	"invites" integer,
	"farm_cigs" integer DEFAULT 0 NOT NULL,
	"ref_cigs" integer DEFAULT 0 NOT NULL,
	"end_time" timestamp with time zone,
	"activity_days" integer DEFAULT 0 NOT NULL,
	"bonuses" smallint[] DEFAULT '{RAY}',
	"level" integer DEFAULT 0 NOT NULL,
	CONSTRAINT "users_tg_id_key" UNIQUE("tg_id"),
	CONSTRAINT "users_first_name_key" UNIQUE("first_name"),
	CONSTRAINT "level_check" CHECK ((level >= 0) AND (level <= 9))
);
--> statement-breakpoint
CREATE TABLE "user_tasks" (
	"user_id" bigint NOT NULL,
	"task_id" integer NOT NULL,
	"status" "task_status" DEFAULT 'start' NOT NULL,
	CONSTRAINT "user_tasks_pkey" PRIMARY KEY("user_id","task_id")
);
--> statement-breakpoint
ALTER TABLE "invites" ADD CONSTRAINT "invites_inviter_fkey" FOREIGN KEY ("inviter") REFERENCES "public"."users"("tg_id") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "invites" ADD CONSTRAINT "invites_invitee_fkey" FOREIGN KEY ("invitee") REFERENCES "public"."users"("tg_id") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "users" ADD CONSTRAINT "users_invited_by_fkey" FOREIGN KEY ("invited_by") REFERENCES "public"."users"("tg_id") ON DELETE set null ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "user_tasks" ADD CONSTRAINT "user_tasks_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("tg_id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "user_tasks" ADD CONSTRAINT "user_tasks_task_id_fkey" FOREIGN KEY ("task_id") REFERENCES "public"."tasks"("id") ON DELETE cascade ON UPDATE no action;
*/